user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;

    keepalive_timeout  0;
    gzip    on;


  upstream app {
      server api:8080 fail_timeout=0;
  }

  upstream elasticsearch {
      server logstash:9200 fail_timeout=0; 
  }
  upstream kibana {
      server logstash:9292 fail_timeout=0; 
  }

  server {

      listen 9292;
      server_name localhost;
      ssl on;
      ssl_certificate /etc/ssl/certs/es.crt;
      ssl_certificate_key /etc/ssl/private/es.key;

      try_files $uri/index.html $uri @kibana;

      location @kibana {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_pass http://kibana;

          auth_basic "Restricted";                    #For Basic Auth
          auth_basic_user_file /etc/nginx/.htpasswd;  #For Basic Auth

      }


      error_page 500 502 503 504 /500.html;
      client_max_body_size 0;
      keepalive_timeout 0;

  }
  server {

     listen 9200;
     server_name localhost;
     ssl on;
     ssl_certificate /etc/ssl/certs/es.crt;
     ssl_certificate_key /etc/ssl/private/es.key;

     proxy_set_header Host       $http_host;   # required for Docker client sake
     proxy_set_header X-Real-IP  $remote_addr; # pass on real client IP

     client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads

     try_files $uri/index.html $uri @elasticsearch;

     location @elasticsearch {
       
      ## Make elasticsearch read-only to avoid attacks
       if ($request_method !~ "GET") {
         return 403;
         break;
       }

         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $http_host;
         proxy_redirect off;
         proxy_pass http://elasticsearch;

         auth_basic "Restricted";                    #For Basic Auth
         auth_basic_user_file /etc/nginx/.htpasswd;  #For Basic Auth

     }


     error_page 500 502 503 504 /500.html;
     keepalive_timeout 0;

 }

 server {

      listen 80;
      server_name localhost;
      try_files $uri/index.html $uri @app;
      root /opt/sinatra/tmp;

      location @app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_pass http://app;
      }


      error_page 500 502 503 504 /500.html;
      client_max_body_size 0;
      keepalive_timeout 0;

  }
}
